{"version":3,"sources":["components/Rating/Rating.tsx","components/UncontrolledOnOff/UncontrolledOnOff.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Star","props","onClick","value","selected","Rating","UncontrolledOnOff","useState","defaultOn","on","setOn","onStyle","width","height","border","display","padding","backgroundColor","offStyle","marginLeft","indicatorStyle","borderRadius","style","onChange","App","ratingValue","setRatingValue","switchOn","setSwitchOn","className","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA+BA,SAASA,EAAKC,GAEV,OAAO,sBAAMC,QAAS,WAAMD,EAAMC,QAAQD,EAAME,QAAzC,SACFF,EAAMG,SAAW,uCAAgB,WAQ3BC,MAjCf,SAAgBJ,GAEZ,OACI,gCACI,cAACD,EAAD,CAAMI,SAAUH,EAAME,MAAQ,EAAGD,QAASD,EAAMC,QAASC,MAAO,IAChE,cAACH,EAAD,CAAMI,SAAUH,EAAME,MAAQ,EAAGD,QAASD,EAAMC,QAASC,MAAO,IAChE,cAACH,EAAD,CAAMI,SAAUH,EAAME,MAAQ,EAAGD,QAASD,EAAMC,QAASC,MAAO,IAChE,cAACH,EAAD,CAAMI,SAAUH,EAAME,MAAQ,EAAGD,QAASD,EAAMC,QAASC,MAAO,IAChE,cAACH,EAAD,CAAMI,SAAUH,EAAME,MAAQ,EAAGD,QAASD,EAAMC,QAASC,MAAO,QCuC7DG,MAhDf,SAA2BL,GAAkB,IAAD,EACtBM,qBAASN,EAAMO,WAAYP,EAAMO,WADX,mBACnCC,EADmC,KAC/BC,EAD+B,KAGlCC,EAAU,CACZC,MAAO,OACPC,OAAQ,OACRC,OAAQ,kBACRC,QAAS,eACTC,QAAS,MACTC,gBAAiBR,EAAK,QAAU,SAE9BS,EAAW,CACbN,MAAO,OACPC,OAAQ,OACRC,OAAQ,kBACRC,QAAS,eACTI,WAAY,MACZH,QAAS,MACTC,gBAAiBR,EAAK,QAAU,OAG9BW,EAAiB,CACnBR,MAAO,OACPC,OAAQ,OACRQ,aAAc,MACdP,OAAQ,kBACRC,QAAS,eACTI,WAAY,MACZF,gBAAiBR,EAAK,QAAU,OAUpC,OAAO,gCACH,qBAAKa,MAAOX,EAAST,QATP,WAClBQ,GAAM,GACNT,EAAMsB,UAAS,IAOX,gBACA,qBAAKD,MAAOJ,EAAUhB,QANP,WACfQ,GAAM,GACNT,EAAMsB,UAAS,IAIf,iBACA,qBAAKD,MAAOF,EAAZ,mBCUOI,MArDf,SAAavB,GAAa,IAAD,EACeM,mBAA0B,GADzC,mBAChBkB,EADgB,KACHC,EADG,OAGSnB,oBAAkB,GAH3B,mBAGhBoB,EAHgB,KAGNC,EAHM,KAKrB,OACI,sBAAKC,UAAU,MAAf,UAEI,cAAC,EAAD,CAAQ1B,MAAOsB,EACPvB,QAASwB,IAgBjB,cAAC,EAAD,CAAmBH,SAAUK,IAnBjC,IAmBiDD,EAASG,eCjBnDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ae835601.chunk.js","sourcesContent":["import React from \"react\";\r\n export type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n\r\ntype RatingPropsType = {\r\n    value:RatingValueType\r\n    onClick: (value:RatingValueType) => void\r\n}\r\n\r\nfunction Rating(props: RatingPropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.value > 0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClick={props.onClick} value={5}/>\r\n\r\n         \r\n\r\n        </div>)\r\n}\r\n\r\n\r\ntype StarPropsType = {\r\n    selected: boolean;\r\n    value: RatingValueType;\r\n    onClick: (value:RatingValueType) => void;\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n\r\n    return <span onClick={()=> {props.onClick(props.value)}} >\r\n        {props.selected ? <b> star </b> : \" star \"}\r\n    </span>\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Rating;","import React, {useState} from \"react\";\r\n\r\n\r\ntype PopsType = {\r\nonChange: (on: boolean)=> void;\r\ndefaultOn?:boolean\r\n}\r\n\r\nfunction UncontrolledOnOff(props: PopsType) {\r\n    let [on, setOn] = useState(props.defaultOn ? props.defaultOn : false);\r\n\r\n    const onStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        padding: \"2px\",\r\n        backgroundColor: on ? \"green\" : \"white\"\r\n    };\r\n    const offStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"5px\",\r\n        padding: \"2px\",\r\n        backgroundColor: on ? \"white\" : \"red\"\r\n\r\n    };\r\n    const indicatorStyle = {\r\n        width: \"10px\",\r\n        height: \"10px\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"5px\",\r\n        backgroundColor: on ? \"green\" : \"red\"\r\n    };\r\n    const onClicked = ()=>{\r\n    setOn(true)\r\n    props.onChange(true)\r\n    }\r\n    const offClicked = ()=> {\r\n        setOn(false)\r\n        props.onChange(false)\r\n    }\r\n    return <div>\r\n        <div style={onStyle} onClick={onClicked}>On</div>\r\n        <div style={offStyle} onClick={offClicked}>Off</div>\r\n        <div style={indicatorStyle}> </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default UncontrolledOnOff;","import React, {useState} from 'react';\nimport './App.css';\nimport Rating, {RatingValueType} from \"./components/Rating/Rating\";\nimport UncontrolledOnOff from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\n\n\nfunction App(props: any) {\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(0)\n    // let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false)\n    let [switchOn, setSwitchOn] = useState<boolean>(false)\n\n    return (\n        <div className=\"App\">\n\n            <Rating value={ratingValue}\n                    onClick={setRatingValue}/>\n\n            {/*<UncontrolledRating />*/}\n\n            {/*<Accordion titleValue={\"Menu\"}*/}\n            {/*           collapsed={accordionCollapsed}*/}\n            {/*           onChange={() => {*/}\n            {/*               setAccordionCollapsed(!accordionCollapsed)*/}\n            {/*           }}/>*/}\n{/*\n\n            <OnOff on={switchOn} onChange={(on) => {\n                setSwitchOn(on)\n            }}/>\n*/}\n\n            <UncontrolledOnOff onChange={setSwitchOn}/> {switchOn.toString()}\n\n            {/*   <PageTitle title={\"This App components\"}/>\n            Article 1\n            <Rating value={3}/>\n            <Accordion titleValue={\"Menu\"} collapsed={true}/>\n            <Accordion titleValue={\"Users\"} collapsed={false}/>\n            Article 2\n            <Rating value={0}/>\n            <Rating value={1}/>\n            <Rating value={2}/>\n            <Rating value={3}/>\n            <Rating value={4}/>\n            <Rating value={5}/>*/}\n        </div>\n    )\n}\n\n//\n// type PageTitlePropsType = {\n//     title: string\n// }\n//\n// function PageTitle(props: PageTitlePropsType) {\n//     return <h3> {props.title}</h3>\n// }\n//\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}